#!/usr/bin/env python3

import sys
import click
import requests

host = 'localhost'
port = '5000'


@click.command()
@click.option('-l', help='Gurobi license key.')
@click.option('-s', type=click.Path(exists=True),
              help='File containing a sentence.')
@click.option('-p', type=click.Path(exists=True),
              help='File containing a parsed sentence.')
@click.option('-k', type=click.Path(exists=True),
              help='File containing a knowledge base.')
@click.option('-q', is_flag=True,
              help='Quiet; do not print link for proof graph.')
@click.argument('sent', nargs=-1, metavar='<sentence>')
def main(l, s, p, k, q, sent):
    """Interpret a sentence or a parsed sentence. Sentences can be read
    from a file (-s) or passed as the argument <sentence>. Parses must be read
    from a file (-p)."""

    if l:
        query = {'license': l}
        r = requests.post('http://' + host + ':' + port + '/license',
                          json=query)
        if not r:
            sys.stderr.write('Error receiving response from server.\n')
            sys.exit(1)

        print(r.json()['response'])

    if not s and not p and not k and not sent:
        sys.exit()

    query = {}

    if k:
        query['kb'] = open(k).read()

    if sent:
        query['s'] = ' '.join(sent)
    elif s:
        query['s'] = open(s).read()
    elif p:
        query['p'] = open(p).read()


    r = requests.post('http://' + host + ':' + port + '/interpret', json=query)
    if not r:
        sys.stderr.write('Error receiving response from server.\n')
        sys.exit(1)

    response = r.json()

    if 'parse' in response and not p:
        print('Parse:')
        print(response['parse'])

    if 'interpret' in response:
        print('Interpret:')
        print(response['interpret'])

    if 'graph' in response and not q:
        print()
        print('Proof graph URL:')
        print(response['graph'])

    if 'error' in response:
        print('Error:')
        print(response['error'])


if __name__ == '__main__':
    main()
